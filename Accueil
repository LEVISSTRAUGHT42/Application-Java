package application;


import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.ResourceBundle;

import com.upb.model.Aritre;
import com.upb.model.Matchs;
import com.upb.model.Membre;
import com.util.dao.IMatchDao;
import com.util.dao.IMembreDao;
import com.util.dao.MatchDao;
import com.util.dao.MembreDao;
import com.upb.model.Membre;

import javafx.collections.ObservableList;
import javafx.collections.transformation.FilteredList;
import javafx.collections.transformation.SortedList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

public class SampleController implements Initializable{
	@FXML
    private TextField Terrain;
    
    @FXML
    private TextField Arbitre;
    
    @FXML
    private Button goArbitre;

    @FXML
    private Button goParticip;

    @FXML
    private Button goTerrain;

    @FXML
    private TextField participant;
    
    @FXML
    private TextField Duree;
    
    @FXML
    private TextField Date;

    @FXML
    private TextField HeureD;

    @FXML
    private TextField HeureF;

    @FXML
    private TableColumn<?, ?> Participants;

    @FXML
    private TableColumn<?, ?> arbitre;
    
    @FXML
    private Button ajouter;

    @FXML
    private Button creer;

    @FXML
    private TableColumn<?, ?> date;

    @FXML
    private TableColumn<?, ?> duree;

    @FXML
    private TableColumn<?, ?> heureD;

    @FXML
    private TableColumn<?, ?> heureF;

    @FXML
    private TableColumn<?, ?> id_match;
    
    @FXML
    private TableColumn<?, ?> terrain;

    @FXML
    private Button modifier;

    @FXML
    private Button supprimer;

    @FXML
    private TableView<Matchs> tableau_match;

    @FXML
    private Pane tableau_partcipant;
    
    IMatchDao imatchDao = new MatchDao();
    IMembreDao imembreDao = new MembreDao();

    @FXML
    private List<Matchs> addMatchList;
    
    @FXML
    private List<Membre> addMembreList;
	@FXML
	private TextField tiTitle;
	
	@FXML
	private Button co;
	
    @FXML
    private Button RechercheButton;

    @FXML
    private TextField TexRecherche;
    
    @FXML
    ObservableList<Matchs> dataList;
    
    @FXML
    void seachUsers() {
              		
    }
	
	 @FXML
	 void Rechercher(ActionEvent event) { 
		 tableau_match.getItems().clear();
		 
	 }

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		co.setOnAction(new EventHandler<ActionEvent>() {
			
			@Override
			public void handle(ActionEvent arg0) {
				// TODO Auto-generated method stub
				try {
					Parent root = FXMLLoader.load(getClass().getResource("Connexion1.fxml"));
					Scene scene = new Scene(root);
					
					Stage stage = new Stage();
					stage.setTitle("CO");
					stage.setScene(scene);
					stage.show();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		matchShowList();
	}
	 public void matchShowList() {
		 
   	  addMatchList = imatchDao.getAllMatchs();
   	  addMembreList = imembreDao.getAllMembres();
   	 Matchs match = new Matchs();
   	 Membre membre = new Membre();
   	 Aritre Arbitre = new Aritre();
   	 
   	 
   	 
   	 id_match.setCellValueFactory(new PropertyValueFactory<>("idMatch"));
   	 date.setCellValueFactory(new PropertyValueFactory<>("dateMatch"));
   	 heureD.setCellValueFactory(new PropertyValueFactory<>("heureDebut"));
   	 heureF.setCellValueFactory(new PropertyValueFactory<>("heureFin"));
   	 duree.setCellValueFactory(new PropertyValueFactory<>("duree"));
   	 Participants.setCellValueFactory(new PropertyValueFactory<>("participant"));
   	 arbitre.setCellValueFactory(new PropertyValueFactory<>("arbitre"));
   	 terrain.setCellValueFactory(new PropertyValueFactory<>("terrain"));
   	
   	 
   	 tableau_match.getItems().addAll(addMatchList);

    }
	
}
